{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["beep","Audio","src","App","props","state","break","session","tempBreak","tempSession","running","stateName","stateColor","handleBreakDec","bind","handleBreakInc","handleSessionDec","handleSessionInc","handlePauseResume","reset","this","setState","timer","setInterval","clearInterval","play","pause","className","id","onClick","style","color","String","Math","floor","length","concat","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8b6afa03.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst beep = new Audio()\nbeep.src = \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      break: 5,\n      session: 25,\n      tempBreak: 300000,\n      tempSession: 1500000,\n      state : 1500000,\n      running: false,\n      stateName: \"Session\",\n      stateColor: \"white\",\n      beep: beep\n    }\n    this.handleBreakDec = this.handleBreakDec.bind(this)\n    this.handleBreakInc = this.handleBreakInc.bind(this)\n    this.handleSessionDec = this.handleSessionDec.bind(this)\n    this.handleSessionInc = this.handleSessionInc.bind(this)\n    this.handlePauseResume = this.handlePauseResume.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n\nhandleBreakDec(){\n  if(this.state.running==false){\n    if(this.state.break>1){\n      if(this.state.stateName==\"Break\"){\n        this.setState({break: this.state.break-1})\n        this.setState({tempBreak: this.state.break*60*1000-60000,state: this.state.break*60*1000-60000})\n      }else{\n        this.setState({break: this.state.break-1, tempBreak: this.state.tempBreak-60000})\n      }\n    }\n  }\n}\nhandleBreakInc(){\n  if(this.state.running==false){\n    if(this.state.break<60){\n      if(this.state.stateName==\"Break\"){\n        this.setState({break: this.state.break+1})\n        this.setState({tempBreak: this.state.break*60*1000+60000,state: this.state.break*60*1000+60000})\n      }else{\n        this.setState({break: this.state.break+1, tempBreak: this.state.tempBreak+60000})\n      }\n    }\n  }\n}\nhandleSessionDec(){\n  if(this.state.running==false){\n    if(this.state.session>1){\n      if(this.state.stateName==\"Session\"){\n        this.setState({session: this.state.session-1})\n        this.setState({tempSession: this.state.session*60*1000-60000,state: this.state.session*60*1000-60000})\n      }else{\n        this.setState({session: this.state.session-1, tempSession: this.state.tempSession-60000})\n      }\n    }\n  }\n}\nhandleSessionInc(){\n  if(this.state.running==false){\n    if(this.state.session<60){\n      if(this.state.stateName==\"Session\"){\n        this.setState({session: this.state.session+1})\n        this.setState({tempSession: this.state.session*60*1000+60000,state: this.state.session*60*1000+60000})\n      }else{\n        this.setState({session: this.state.session+1, tempSession: this.state.tempSession+60000})\n      }\n    }\n  }\n}\n\nhandlePauseResume(){\n  this.setState({running: !this.state.running})\n  const timer = setInterval(function(){\n    if(this.state.running==false){\n      clearInterval(timer)\n    }\n    if(this.state.running==true){\n      if(this.state.tempSession==0){\n        this.setState({state: this.state.tempBreak, tempSession: this.state.session*60*1000,stateName: \"Break\"})\n      }\n      if(this.state.tempBreak==0){\n        this.setState({state: this.state.tempSession,tempBreak: this.state.break*1000*60, stateName: \"Session\"})\n      }\n      if(this.state.stateName==\"Session\"){\n        this.setState({state: this.state.state-1000,tempSession: this.state.tempSession-1000})\n      }\n      if(this.state.stateName==\"Break\"){\n        this.setState({state: this.state.state-1000, tempBreak: this.state.tempBreak-1000})\n      }\n    }\n    if(this.state.state==0){\n      this.state.beep.play()\n    }\n    if(this.state.state<60000){\n      this.setState({stateColor: \"red\"})\n    }else{\n      this.setState({stateColor: \"white\"})\n    }\n  }.bind(this),1000)\n  return timer\n}\n\nreset(){\n  this.setState({\n    break: 5,\n    session: 25,\n    tempBreak: 300000,\n    tempSession: 1500000,\n    state : 1500000,\n    running: false,\n    stateName: \"Session\",\n    stateColor: \"white\",})\n    this.state.beep.pause()\n}\n\n  render(){\n    return (\n      <div className = \"container\">\n        <div className = \"appDiv\">\n          <h1>Pomodoro Clock</h1>\n          <div className = \"bAndS\">\n            <div id=\"break-label\" className = \"breakDiv\">\n                <p className = \"enlargeText\">Break Length</p>\n                <div className = \"breakItems\">\n                  <button id=\"break-decrement\" onClick = {this.handleBreakDec}>\n                  <i className=\"fas fa-chevron-down fa-lg\"></i>\n                  </button>\n                  <p id=\"break-length\">{this.state.break}</p>\n                  <button id=\"break-increment\" onClick = {this.handleBreakInc}>\n                  <i className=\"fas fa-chevron-up fa-lg\"></i>\n                  </button>\n                </div>\n              </div>\n\n              <div id=\"session-label\" className = \"sessionDiv\">\n                <p className = \"enlargeText\">Session Length</p>\n                <div className = \"sessionItems\">\n                  <button id=\"session-decrement\" onClick = {this.handleSessionDec}>\n                  <i className=\"fas fa-chevron-down fa-lg\"></i>\n                  </button>\n                  <p id=\"session-length\">{this.state.session}</p>\n                  <button  id=\"session-increment\" onClick = {this.handleSessionInc}>\n                  <i className=\"fas fa-chevron-up fa-lg\"></i>\n                  </button>\n                </div>\n              </div>\n          </div>\n\n          <div className = \"timerDiv\" style = {{color: this.state.stateColor}}>\n            <p className = \"timerP enlargeText\" id=\"timer-label\">{this.state.stateName}</p>\n            <p className = \"timerClock timerP\" id=\"time-left\">{String(Math.floor(this.state.state/(1000*60))).length==1?\"0\".concat(String(Math.floor(this.state.state/(1000*60)))):Math.floor(this.state.state/(1000*60))}:\n            {String((this.state.state-(Math.floor(this.state.state/(1000*60))*60*1000))/1000).length==1?\"0\".concat(String((this.state.state-(Math.floor(this.state.state/(1000*60))*60*1000))/1000)):(this.state.state-(Math.floor(this.state.state/(1000*60))*60*1000))/1000}</p>\n          </div>\n          <br />\n          <div className = \"pauseResumeReset\">\n            <button id=\"start_stop\" onClick = {this.handlePauseResume}><i className=\"fas fa-play fa-lg\"><i className=\"fas fa-pause fa-lg\"></i></i></button>\n            <button onClick = {this.reset}><i className=\"fas fa-sync fa-2x\"></i></button>\n          </div>\n          <p className = \"regards\">Designed And Coded By Ozair</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}